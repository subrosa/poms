<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.subrosa.maven</groupId>
    <artifactId>base-pom</artifactId>
	<version>0.8</version>
	<relativePath>../base-pom</relativePath>
  </parent>
  <artifactId>cli-pom</artifactId>
  <packaging>pom</packaging>
  <name>cli-pom</name>
  <description>
	Pom for command line applications.
  </description>
  <url>${urlRoot}/cli-pom</url>

  <properties>
    <external.config.environmentDirectory>/opt/subrosa/etc</external.config.environmentDirectory>
    <external.config.directory>${external.config.environmentDirectory}</external.config.directory>
    <external.config.appName>${project.artifactId}</external.config.appName>
    <external.config.repositoryRoot>https://hg.subrosagames.com/config</external.config.repositoryRoot>
    <external.config.repositoryUrl>scm:hg:${external.config.repositoryRoot}/${external.config.appName}</external.config.repositoryUrl>
    <external.config.repositoryRevision>default</external.config.repositoryRevision>
	<deployer-tools.version>0.1</deployer-tools.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.subrosa.tools</groupId>
      <artifactId>deployer-tools</artifactId>
      <version>${deployer-tools.version}</version>
      <type>tar.gz</type>
      <classifier>bundle</classifier>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>etc/**</exclude>
        </excludes>
        <filtering>false</filtering>
      </resource>
      <resource> <!-- To pick up the expected build.properties file -->
        <directory>src/main/resources</directory>
        <includes>
          <include>etc/**</include>
        </includes>
        <filtering>true</filtering>
      </resource>
    </resources>

    <pluginManagement>
      <plugins>
        <!-- Ensure that Surefire has the config directory property -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <systemPropertyVariables>
              <external.config.directory>${external.config.directory}</external.config.directory>
            </systemPropertyVariables>
          </configuration>
        </plugin>

        <!-- Fetch the deploy.sh script for convenience -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <executions>
            <execution>
              <id>fetch-deploy-script</id>
              <phase>never-run</phase>
              <goals><goal>unpack-dependencies</goal></goals>
              <configuration>
                <includeArtifactIds>deployer-tools</includeArtifactIds>
                <includes>scripts/deploy.sh</includes>
                <outputDirectory>${project.build.directory}</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>banned-dependencies</id>
            <goals><goal>enforce</goal></goals>
            <configuration>
              <rules>
                <bannedDependencies>
                  <excludes>
                    <exclude>commons-logging</exclude>
                    <exclude>log4j</exclude>
                    <exclude>org.slf4j:slf4j-log4j12</exclude>
                    <exclude>commons-dbcp</exclude>
                  </excludes>
                  <includes>
                    <include>commons-dbcp:*:*:*:test</include>    
                  </includes>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>

    <extensions>
      <extension>
        <groupId>com.subrosa.tools</groupId>
        <artifactId>deployer-tools</artifactId>
        <version>${deployer-tools.version}</version>
      </extension>
    </extensions>
  </build>

  <profiles>
    <profile>
      <id>captive-config</id>
      <properties>
        <external.config.directory>${project.build.directory}/ext-config</external.config.directory>
        <external.config.checkoutDirectory>${project.build.directory}/checkout-config</external.config.checkoutDirectory>
        <skipConfigCheckoutIfExists>true</skipConfigCheckoutIfExists>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-scm-plugin</artifactId>
              <executions>
                <execution>
                  <id>fetch-external-configs</id>
                  <phase>never-run</phase>
                  <goals><goal>checkout</goal></goals>
                  <configuration>
                    <checkoutDirectory>${external.config.checkoutDirectory}</checkoutDirectory>
                    <connectionUrl>${external.config.repositoryUrl}</connectionUrl>
                    <includes>${external.config.environment}/**</includes>
                    <skipCheckoutIfExists>${skipConfigCheckoutIfExists}</skipCheckoutIfExists>
                    <scmVersion>${external.config.repositoryRevision}</scmVersion>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-assembly-plugin</artifactId>
              <executions>
                <execution>
                  <id>assemble-external-configs</id>
                  <phase>never-run</phase>
                  <goals><goal>single</goal></goals>
                  <configuration>
                    <attach>false</attach>
                    <finalName>ext-config</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                    <descriptorRefs>
                      <descriptorRef>captive-config</descriptorRef>
                    </descriptorRefs>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
        
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-environment</id>
                <goals><goal>enforce</goal></goals>
                <configuration>
                  <rules>
                    <requireProperty>
                      <property>external.config.environment</property>
                      <message>The captive-config profile requires the external.config.environment property be set.</message>
                    </requireProperty>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>refresh-config</id>
      <properties>
        <skipConfigCheckoutIfExists>false</skipConfigCheckoutIfExists>
      </properties>
    </profile>

    <profile>
      <id>prepare-deployment</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-deployer</id>
                <goals><goal>enforce</goal></goals>
                <configuration>
                  <rules>
                    <requireFilesExist>
                      <files>
                        <file>src/main/conf/deployer.conf</file>
                      </files>
                      <message>Base deployer.conf not found, most likely because this is not an unpacked deployer artifact.</message>
                    </requireFilesExist>
                    <requireProperty>
                      <property>external.config.environment</property>
                      <message>Deployer requires the external.config.environment property be set.</message>
                    </requireProperty>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>filter-deployer-conf</id>
                <phase>generate-sources</phase>
                <goals><goal>copy-resources</goal></goals>
                <configuration>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/main/conf</directory>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                  <useDefaultDelimiters>false</useDefaultDelimiters>
                  <delimiters>
                    <delimiter>@</delimiter>
                  </delimiters>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Profile that activates automatically for deployers only -->
    <profile>
      <id>for-deployers-only</id>
      <activation>
        <file>
          <exists>src/main/scripts/deploy.sh</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <!-- Skip enforcement of site descriptor from default-pom -->
                <id>enforce-site-descriptor</id>
                <goals><goal>enforce</goal></goals>
                <configuration>
                  <skip>true</skip>
                </configuration>
              </execution>
              <execution>
                <!-- Ensure the deployer doesn't get beyond the test phase -->
                <id>protect-from-deployer-corruption</id>
                <phase>prepare-package</phase>
                <goals><goal>enforce</goal></goals>
                <configuration>
                  <rules>
                    <alwaysFail>
                      <message>To avoid corrupting artifacts, you can't run a deployer artifact past the test phase.</message>
                    </alwaysFail>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <distributionManagement>
    <site>
      <id>subrosa-site</id>
      <name>Subrosa Maven Docs</name>
      <url>${siteDeployRoot}/cli-pom</url>
    </site>
  </distributionManagement>

</project>
